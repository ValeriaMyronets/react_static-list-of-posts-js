{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","usersFromServer","find","userId","undefined","length","PostList","posts","postsFromServer","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAE9C,OAED,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SAAoCD,EAAQK,WCZnCC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,mCACE,qBAAKN,UAAU,cAAf,SACGM,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,aCLvCC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,8BACG,eACD,mBAAGV,UAAU,WAAWE,KAAI,iBAAYQ,EAAKP,OAA7C,SACGO,EAAKT,YCACU,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKZ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCY,EAAKC,QAEtC,cAAC,EAAD,CAAUH,KACRI,EAAgBC,MAAK,SAAAL,GAAI,OAAKE,EAAKI,SAAWN,EAAKF,WAKvD,mBAAGR,UAAU,iBAAb,SAA+BY,EAAKR,OAEpC,4BAEmBa,IAAlBL,EAAKN,UAAmD,IAAzBM,EAAKN,SAASY,OAC5C,mBAAG,UAAQ,oBAAX,6BAEA,cAAC,EAAD,CAAaZ,SAAUM,EAAKN,gBCtBrBa,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,mCACE,qBAAKpB,UAAU,WAAf,SACGoB,EAAMb,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,YCWjC,IAAMY,EAAQC,EAAgBd,KAAI,SAAAK,GAAI,kCACxCA,GADwC,IAE3CF,MAZmBM,EAYDJ,EAAKI,OAXhBF,EAAgBC,MAAK,SAAAL,GAAI,OAAIA,EAAKF,KAAOQ,MAC3C,MAWLV,UARuBgB,EAQGV,EAAKJ,GAPxBe,EAAmBC,QAAO,SAAAzB,GAAO,OAAIA,EAAQuB,SAAWA,MAC1D,QAFP,IAAyBA,EALJN,KAgBRS,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUoB,MAAOA,QCvBrBM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b5fd88c5.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">{comment.body}</div>\n\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <>\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))}\n    </div>\n  </>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <p>\n    {' Posted by  '}\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  </p>\n);\n","import usersFromServer from '../../api/users.json';\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{post.title}</h3>\n\n      <UserInfo user={\n        usersFromServer.find(user => (post.userId === user.id))\n      }\n      />\n    </div>\n\n    <p className=\"PostInfo__body\">{post.body}</p>\n\n    <hr />\n\n    {post.comments === undefined || post.comments.length === 0 ? (\n      <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n    ) : (\n      <CommentList comments={post.comments} />\n    )}\n\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <>\n    <div className=\"PostList\">\n      {posts.map(post => (\n        <PostInfo post={post} key={post.id} />\n      ))}\n    </div>\n  </>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentsById(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId)\n    || null;\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}